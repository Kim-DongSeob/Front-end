name: boiler-plate-front
on:
  push:
    branches:
      - release
jobs:
  build:
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: 'ap-northeast-2'

    steps:
      - name: Checkout source code.
        uses: actions/checkout@master

      - name: Check Node v # Node v 확인
        run: node -v

      - name: Generate Environment Variables File for Production
        run: |
          echo "REACT_APP_API_URL=${{ secrets.REACT_APP_API_URL }}" >> .env
          echo "REACT_APP_AWS_S3_ACCESS_KEY=${{ secrets.REACT_APP_AWS_S3_ACCESS_KEY }}" >> .env
          echo "REACT_APP_AWS_S3_BUCKET=${{ secrets.REACT_APP_AWS_S3_BUCKET }}" >> .env
          echo "REACT_APP_AWS_S3_REGION=${{ secrets.REACT_APP_AWS_S3_REGION }}" >> .env
          echo "REACT_APP_AWS_S3_SECRET_KEY=${{ secrets.REACT_APP_AWS_S3_SECRET_KEY }}" >> .env
          echo "REACT_APP_AWS_S3_URL=${{ secrets.REACT_APP_AWS_S3_URL }}" >> .env
          echo "REACT_APP_KAKAO_LOGIN_URL=${{ secrets.REACT_APP_KAKAO_LOGIN_URL }}" >> .env
          echo "REACT_APP_OPENVIDU_URL=${{ secrets.REACT_APP_OPENVIDU_URL }}" >> .env
          echo "REACT_APP_SOCKET_MESSAGE_URL=${{ secrets.REACT_APP_SOCKET_MESSAGE_URL }}" >> .env
          echo "REACT_APP_SOCKET_VOTE_URL=${{ secrets.REACT_APP_SOCKET_VOTE_URL }}" >> .env
          echo "REACT_APP_FIREBASE_API_KEY=${{ secrets.REACT_APP_FIREBASE_API_KEY }}" >> .env
          echo "REACT_APP_FIREBASE_AUTH_DOMAIN=${{ secrets.REACT_APP_FIREBASE_AUTH_DOMAIN }}" >> .env
          echo "REACT_APP_FIREBASE_PROJECT_ID=${{ secrets.REACT_APP_FIREBASE_PROJECT_ID }}" >> .env
          echo "REACT_APP_FIREBASE_STORAGE_BUCKET=${{ secrets.REACT_APP_FIREBASE_STORAGE_BUCKET }}" >> .env
          echo "REACT_APP_FIREBASE_APP_ID=${{ secrets.REACT_APP_FIREBASE_APP_ID }}" >> .env
          echo "REACT_APP_FIREBASE_MEASUREMENT_ID=${{ secrets.REACT_APP_FIREBASE_MEASUREMENT_ID }}" >> .env
          cat .env

      - name: yarn install
        run: yarn install

      - name: Build
        run: yarn build
        env:
          CI: "" # 경고를 에러로 보지 않게 함

      - name: Deploy S3 # Upload build file to S3
        run: |
          aws s3 cp --recursive --region ap-northeast-2 build s3://hanghae-boiler-plate

      - name: Invalidate cache CloudFront
        uses: chetan/invalidate-cloudfront-action@master
        env:
          DISTRIBUTION: ${{ secrets.DISTRIBUTION_ID }}
